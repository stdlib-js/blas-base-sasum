// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=function(){try{return r({},"x",{}),!0}catch(r){return!1}},e=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,u=n.__defineSetter__,l=n.__lookupGetter__,i=n.__lookupSetter__;var c=e,f=function(r,t,e){var c,f,y,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+e+"`.");if((f="value"in e)&&(l.call(r,t)||i.call(r,t)?(c=r.__proto__,r.__proto__=n,delete r[t],r[t]=e.value,r.__proto__=c):r[t]=e.value),y="get"in e,p="set"in e,f&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&a&&a.call(r,t,e.get),p&&u&&u.call(r,t,e.set),r},y=t()?c:f;var p=function(r,t,e){y(r,t,{configurable:!1,enumerable:!1,writable:!1,value:e})};var b=function(r){return Math.abs(r)},v="function"==typeof Math.fround?Math.fround:null;var _=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")}();var d=function(){return _&&"symbol"==typeof Symbol.toStringTag},m=Object.prototype.toString,s=m;var g=function(r){return s.call(r)},j=Object.prototype.hasOwnProperty;var w=function(r,t){return null!=r&&j.call(r,t)},h="function"==typeof Symbol?Symbol.toStringTag:"",S=w,A=h,F=m;var O=g,P=function(r){var t,e,n;if(null==r)return F.call(r);e=r[A],t=S(r,A);try{r[A]=void 0}catch(t){return F.call(r)}return n=F.call(r),t?r[A]=e:delete r[A],n},T=d()?P:O,E="function"==typeof Float32Array;var I=function(r){return E&&r instanceof Float32Array||"[object Float32Array]"===T(r)},M=Number.POSITIVE_INFINITY,N="function"==typeof Float32Array?Float32Array:null,V=I,k=M,x=N;var G="function"==typeof Float32Array?Float32Array:void 0,C=function(){throw new Error("not implemented")},Y=new(function(){var r,t;if("function"!=typeof x)return!1;try{t=new x([1,3.14,-3.14,5e40]),r=V(t)&&1===t[0]&&3.140000104904175===t[1]&&-3.140000104904175===t[2]&&t[3]===k}catch(t){r=!1}return r}()?G:C)(1);var q=v;"function"!=typeof q&&(q=function(r){return Y[0]=r,Y[0]});var z=q;function B(r,t,e){var n,o;if(n=0,r<=0||e<=0)return n;for(r*=e,o=0;o<r;o+=e)n=z(n+b(t[o]));return n}function D(r,t,e,n){var o,a,u;if(o=0,r<=0)return o;for(a=n,u=0;u<r;u++)o=z(o+b(t[a])),a+=e;return o}p(B,"ndarray",D);export{B as default,D as ndarray};
//# sourceMappingURL=mod.js.map
